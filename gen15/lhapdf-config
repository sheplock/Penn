#! /usr/bin/env bash

# These variables need to exist

#prefix=/afs/cern.ch/sw/lcg/external/MCGenerators/lhapdf/5.8.9/i686-slc5-gcc43-opt
lhabase=$(echo $LHAPATH | awk '{split($1,a,"/share");print a[1];}')
prefix=$lhabase

athversion=$(echo $AtlasVersion | awk '{split($1,a,"."); print a[1]}')
if [[ "$athversion" != "17" && "$athversion" != "19" ]]; then
    #Hack for nightlies
    athversion=$(echo $(basename $(echo $AtlasBaseDir)) | awk '{split($1,a,"."); print a[1]}')
fi


if [[ "$athversion" == "17" ]]; then
    prefix=$prefix/$CMTCONFIG

    version=$($prefix/bin/lhapdf-config --version)
    
    datadir=$lhabase/share/lhapdf
    if [ ! -d $datadir ]; then
	datadir=$lhabase/share/LHAPDF
    fi

else
    
    version=$(echo "$prefix" | awk '{split($1,a,"lhapdf/"); split(a[2],b,"/");print b[1];}')
    datadir=$(echo $LHAPATH | awk '{split($1,a,":");print a[2];}')
    #datadir=$(echo $LHAPDF_DATA_PATH)
fi

versionIs6=FALSE
test=$(echo $version | grep 6. | wc -w)
if [ $test -eq 1 ]; then
    versionIs6=TRUE
fi


exec_prefix=${prefix}
datarootdir=${prefix}/share

if [[ $# -eq 0 || -n $( echo $* | egrep -- "--help|-h" ) ]]; then
    echo "lhapdf-config: configuration tool for the LHAPDF"
    echo "               parton density function evolution library"
    echo "               http://projects.hepforge.org/lhapdf/"
    echo
    echo "Usage: lhapdf-config [[--help|-h] | [--prefix] | [--pdfsets-path]]"
    echo "Options:"
    echo "  --help | -h    : show this help message"
    echo "  --prefix       : show the installation prefix (cf. autoconf)"
    echo "  --incdir       : show the path to the LHAPDF header directory (for C++ interface)"
    echo "  --libdir       : show the path to the LHAPDF library directory"
    echo "  --datadir      : show the path to the LHAPDF installed data directory"
    echo "  --pdfsets-path : show the path to the directory containing the PDF set data files"
    echo
    echo "  --cppflags     : get compiler flags for use with the C preprocessor stage of C++ compilation"
    echo "  --ldflags      : get compiler flags for use with the linker stage of any compilation"
    echo
    echo "  --version      : returns Rivet release version number"
fi

OUT=""



tmp=$( echo "$*" | egrep -- '--\<prefix\>')
test -n "$tmp" && OUT="$OUT ${prefix}"

tmp=$( echo "$*" | egrep -- '--\<incdir\>')
test -n "$tmp" && OUT="$OUT ${prefix}/include"

tmp=$( echo "$*" | egrep -- '--\<cppflags\>')
test -n "$tmp" && OUT="$OUT -I${prefix}/include"

tmp=$( echo "$*" | egrep -- '--\<libdir\>')
test -n "$tmp" && OUT="$OUT ${exec_prefix}/lib"

tmp=$( echo "$*" | egrep -- '--\<ldflags\>')
test -n "$tmp" && OUT="$OUT -L${exec_prefix}/lib -lLHAPDF"

tmp=$( echo "$*" | egrep -- '--\<datadir\>|--\<datarootdir\>')
test -n "$tmp" && OUT="$OUT $datadir"

tmp=$( echo "$*" | egrep -- '--\<pdfsets-path\>')
test -n "$tmp" && OUT="$OUT $LHAPATH"

## Version
tmp=$( echo "$*" | egrep -- '--\<version\>')
test -n "$tmp" && OUT="$OUT $version"

echo $OUT
